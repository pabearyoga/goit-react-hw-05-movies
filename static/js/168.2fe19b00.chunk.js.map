{"version":3,"file":"static/js/168.2fe19b00.chunk.js","mappings":"+NACA,EAAiC,gCAAjC,EAA+E,6BAA/E,EAA8H,iCAA9H,EAAgL,gCAAhL,EAA4N,2B,mBCiD3N,EA5Ce,WACZ,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,CAAC,GAAxC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACNP,GAAWM,GAAa,IAExBE,EAAAA,EAAAA,IAAoBR,GACnBS,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACLN,EAAWM,EACd,IACAC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAhB,IACTG,QAAQT,GAAa,GACzB,GAAE,CAACN,KAGA,iBAAKgB,UAAWC,EAAhB,UACKZ,IAAa,SAACa,EAAAA,OAAD,IAEZ,OAACf,QAAD,IAACA,GAAAA,EAASgB,OACRhB,EAAQiB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,WAAYC,EAApC,EAAoCA,WAApC,OACR,4BACI,qCAAaH,MACb,iBAAKN,UAAWC,EAAhB,WACI,eAAGD,UAAWC,EAAd,sBACcO,EAAWE,MAAM,EAAG,IAAIC,oBAErCF,IACG,eAAGT,UAAWC,EAAd,sBACcQ,EAAWC,MAAM,EAAG,IAAIC,wBAI9C,cAAGX,UAAWC,EAAd,SAAmCM,MAZ5BF,EADH,KAiBZ,cAAGL,UAAWC,EAAd,6BAId,C,qOC/CWW,EAAY,kCAEnBC,EAAS,mCAAG,kGAASC,EAAT,EAASA,SAAT,IAAmBC,MAAAA,OAAnB,MAAyB,CAAC,EAA1B,EAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEnBC,EAAc,IAAIC,iBAAJ,QACpBC,QAAS,oCACNJ,IALa,kBAOTC,EAAAA,EAAAA,IAAA,UACGF,EADH,YACeG,IACnBxB,MAAK,SAAA2B,GACJ,OAAwB,MAApBA,EAASC,OACJC,QAAQC,OAAR,iBAAyBH,EAASI,UAGP,IAAhCJ,EAASK,KAAKC,cACTJ,QAAQC,OACb,8CAIGH,EAASK,IACjB,IACA9B,OAAM,SAAAC,GACL,OAAO0B,QAAQC,OAAO3B,EACvB,KAxBa,2CAAH,sDA2BF+B,EAAoB,WAC/B,OAAOd,EAAU,CAAEC,SAAU,uBAC9B,EAGYc,EAAyB,SAACC,GACrC,OAAOhB,EAAU,CACfC,SAAU,gBACVC,MAAO,CAACc,MAAAA,IAEX,EAEYC,EAAsB,SAAC9C,GAClC,OAAO6B,EAAU,CACfC,SAAS,UAAD,OAAY9B,IAEvB,EACY+C,EAAmB,SAAC/C,GAC/B,OAAO6B,EAAU,CACfC,SAAS,UAAD,OAAY9B,EAAZ,aAEX,EAEYQ,EAAsB,SAACR,GAClC,OAAO6B,EAAU,CACfC,SAAS,UAAD,OAAY9B,EAAZ,aAEX,C","sources":["webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","servises/MovieAPI.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"ReviewsWrapper\":\"Reviews_ReviewsWrapper__MiYwc\",\"ReviewsDate\":\"Reviews_ReviewsDate__Z9HPf\",\"ReviewsDateItem\":\"Reviews_ReviewsDateItem__nFjFG\",\"ReviewsContent\":\"Reviews_ReviewsContent__JkSe5\",\"NoReviews\":\"Reviews_NoReviews__YBZN9\"};","import { useParams } from \"react-router-dom\"\nimport { useState, useEffect } from \"react\"\nimport {getMovieReviewsById} from \"servises/MovieAPI\"\nimport css from './Reviews.module.css'\nimport { Loader } from \"components/Loader/Loader\"\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState({});\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n        movieId && setIsLoading(true);\n\n        getMovieReviewsById(movieId)\n        .then(({ results }) => {\n            setReviews(results);\n        })\n        .catch(err => console.log(err))\n        .finally(setIsLoading(false));\n    }, [movieId]);\n\n    return (\n        <div className={css.ReviewsWrapper}>\n            {isLoading && <Loader/>}\n   \n            {!!reviews?.length ? (\n                reviews.map(({ id, author, content, created_at, updated_at }) => (\n                    <div  key={id}>\n                        <h4>Author: {author}</h4>\n                        <div className={css.ReviewsDate}>\n                            <p className={css.ReviewsDateItem}>\n                                Created: {created_at.slice(0, 10).toLocaleString()}\n                            </p>\n                            {updated_at && (\n                                <p className={css.ReviewsDateItem}>\n                                    Updated: {updated_at.slice(0, 10).toLocaleString()}\n                                </p>\n                            )}\n                        </div>\n                        <p className={css.ReviewsContent}>{content}</p>\n                    </div>\n                ))\n            ) : (\n                <p className={css.NoReviews}>No Reviews...</p>\n            )}\n     </div>\n     )\n }\n\n export default Reviews","import axios from 'axios';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst getMovies = async ({ pathName, param={} }) => {\n  axios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\n  const searchParam = new URLSearchParams({\n  api_key: '8981d06a4174dd7b5006af470bdeff3a',\n  ...param\n  });\n  return axios\n    .get(`${pathName}?${searchParam}`)\n    .then(response => {\n      if (response.status !== 200) {\n        return Promise.reject(`Error: ${response.message}`);\n      }\n\n      if (response.data.total_results === 0) {\n        return Promise.reject(\n          'Sorry, no matches found. Please try again.'\n        );\n      }\n\n      return response.data;\n    })\n    .catch(err => {\n      return Promise.reject(err);\n    });\n};\n\nexport const getTrendingMovies = () => {\n  return getMovies({ pathName: '/trending/movie/day' })\n};\n\n     \nexport const getMoviesBySearchQuery = (query) => {\n  return getMovies({\n    pathName: '/search/movie',\n    param: {query}\n  })\n};\n  \nexport const getMovieDetailsById = (movieId) => {\n  return getMovies({\n    pathName: `/movie/${movieId}`\n  })\n};\nexport const getMovieCastById = (movieId) => {\n  return getMovies({\n    pathName: `/movie/${movieId}/credits`\n  })\n};\n\nexport const getMovieReviewsById = (movieId) => {\n  return getMovies({\n    pathName: `/movie/${movieId}/reviews`\n  })\n};"],"names":["movieId","useParams","useState","reviews","setReviews","isLoading","setIsLoading","useEffect","getMovieReviewsById","then","results","catch","err","console","log","finally","className","css","Loader","length","map","id","author","content","created_at","updated_at","slice","toLocaleString","IMAGE_URL","getMovies","pathName","param","axios","searchParam","URLSearchParams","api_key","response","status","Promise","reject","message","data","total_results","getTrendingMovies","getMoviesBySearchQuery","query","getMovieDetailsById","getMovieCastById"],"sourceRoot":""}