{"version":3,"file":"static/js/344.40909805.chunk.js","mappings":"mOACA,EAAoC,gCAApC,EAAwF,gCAAxF,EAAuI,2BAAvI,EAA2L,qCAA3L,EAAqP,iC,SCgDpP,EArCY,WACT,OAA4CA,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAeA,OAZAC,EAAAA,EAAAA,YAAU,WACND,GAAa,IAEbE,EAAAA,EAAAA,MACCC,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACLN,EAAkBM,EACrB,IACAC,OAAM,SAAAC,GAAG,OAAIC,EAAAA,GAAAA,MAAYD,EAAhB,IACTE,QAAQR,GAAa,GACzB,GAAE,IAGID,GAAa,uCAEZ,2BACI,4BACI,eAAIU,UAAWC,EAAf,sCACA,eAAID,UAAWC,EAAf,SACKb,EAAec,KAAI,SAAAC,GAAa,OAC7B,gBAAIH,UAAWC,EAAf,WACI,SAAC,KAAD,CAAMG,GAAE,iBAAYD,EAAcE,IAAlC,UAAyC,gBAAKC,KA7B5DC,EA6B0EJ,EAAcK,YA5BhG,GAAN,OAAUC,EAAAA,IAAV,OAAsBF,IA4B8FG,IAAKP,EAAcQ,WAC3G,gBAAKX,UAAWC,EAAhB,UACI,cAAGD,UAAWC,EAAd,SAA2CE,EAAcQ,YAHtBR,EAAcE,IA5BpE,IAACE,CA2BuC,UAYvD,C,8NC9CWE,EAAY,kCAEnBG,EAAS,mCAAG,kGAASC,EAAT,EAASA,SAAT,IAAmBC,MAAAA,OAAnB,MAAyB,CAAC,EAA1B,EAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEnBC,EAAc,IAAIC,iBAAJ,QACpBC,QAAS,oCACNJ,IALa,kBAOTC,EAAAA,EAAAA,IAAA,UACGF,EADH,YACeG,IACnBtB,MAAK,SAAAyB,GACJ,OAAwB,MAApBA,EAASC,OACJC,QAAQC,OAAR,iBAAyBH,EAASI,UAGP,IAAhCJ,EAASK,KAAKC,cACTJ,QAAQC,OACb,8CAIGH,EAASK,IACjB,IACA5B,OAAM,SAAAC,GACL,OAAOwB,QAAQC,OAAOzB,EACvB,KAxBa,2CAAH,sDA2BFJ,EAAoB,WAC/B,OAAOmB,EAAU,CAAEC,SAAU,uBAC9B,EAGYa,EAAyB,SAACC,GACrC,OAAOf,EAAU,CACfC,SAAU,gBACVC,MAAO,CAACa,MAAAA,IAEX,EAEYC,EAAsB,SAACC,GAClC,OAAOjB,EAAU,CACfC,SAAS,UAAD,OAAYgB,IAEvB,EACYC,EAAmB,SAACD,GAC/B,OAAOjB,EAAU,CACfC,SAAS,UAAD,OAAYgB,EAAZ,aAEX,EAEYE,EAAsB,SAACF,GAClC,OAAOjB,EAAU,CACfC,SAAS,UAAD,OAAYgB,EAAZ,aAEX,C","sources":["webpack://react-homework-template/./src/Pages/Home/Home.module.css?51fa","Pages/Home/Home.jsx","servises/MovieAPI.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"TrendingMovieList\":\"Home_TrendingMovieList__XtN-J\",\"TrendingMovieItem\":\"Home_TrendingMovieItem__ldC9K\",\"TitleWrapper\":\"Home_TitleWrapper__kuDS+\",\"TrendingMovieItemTitle\":\"Home_TrendingMovieItemTitle__BfBV0\",\"TrendingMovieTitle\":\"Home_TrendingMovieTitle__Omoi4\"};","import { useState, useEffect } from 'react'\nimport { toast } from 'react-toastify';\n\nimport {getTrendingMovies} from \"servises/MovieAPI\"\nimport { Link } from \"react-router-dom\";\nimport { IMAGE_URL } from \"servises/MovieAPI\";\n\nimport css from \"./Home.module.css\"\nconst imageUrl = (poster) => {\n    return `${IMAGE_URL}${poster}`\n}\n\nconst Home = () => {\n    const [trendingMovies, setTrendingMovies] = useState([])\n    const [isLoading, setIsLoading] = useState(false);\n\n\n    useEffect(() => {\n        setIsLoading(true);\n\n        getTrendingMovies()\n        .then(({ results }) => {\n            setTrendingMovies(results);\n        })\n        .catch(err => toast.error(err))\n        .finally(setIsLoading(false));\n    }, []);\n\n\n    return isLoading ? (<p>Loading...</p>) :\n        (\n            <main>\n                <div>\n                    <h1 className={css.TrendingMovieTitle}>Top-20 trending movies:</h1>\n                    <ul className={css.TrendingMovieList}>\n                        {trendingMovies.map(trendingMovie => (\n                            <li className={css.TrendingMovieItem} key={trendingMovie.id} >\n                                <Link to={`movies/${trendingMovie.id}`} ><img src={imageUrl(trendingMovie.poster_path)} alt={trendingMovie.title} /></Link>\n                                <div className={css.TitleWrapper}>\n                                    <p className={css.TrendingMovieItemTitle}>{trendingMovie.title}</p>\n                                </div>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            </main>\n        )\n }\n\n export default Home","import axios from 'axios';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst getMovies = async ({ pathName, param={} }) => {\n  axios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\n  const searchParam = new URLSearchParams({\n  api_key: '8981d06a4174dd7b5006af470bdeff3a',\n  ...param\n  });\n  return axios\n    .get(`${pathName}?${searchParam}`)\n    .then(response => {\n      if (response.status !== 200) {\n        return Promise.reject(`Error: ${response.message}`);\n      }\n\n      if (response.data.total_results === 0) {\n        return Promise.reject(\n          'Sorry, no matches found. Please try again.'\n        );\n      }\n\n      return response.data;\n    })\n    .catch(err => {\n      return Promise.reject(err);\n    });\n};\n\nexport const getTrendingMovies = () => {\n  return getMovies({ pathName: '/trending/movie/day' })\n};\n\n     \nexport const getMoviesBySearchQuery = (query) => {\n  return getMovies({\n    pathName: '/search/movie',\n    param: {query}\n  })\n};\n  \nexport const getMovieDetailsById = (movieId) => {\n  return getMovies({\n    pathName: `/movie/${movieId}`\n  })\n};\nexport const getMovieCastById = (movieId) => {\n  return getMovies({\n    pathName: `/movie/${movieId}/credits`\n  })\n};\n\nexport const getMovieReviewsById = (movieId) => {\n  return getMovies({\n    pathName: `/movie/${movieId}/reviews`\n  })\n};"],"names":["useState","trendingMovies","setTrendingMovies","isLoading","setIsLoading","useEffect","getTrendingMovies","then","results","catch","err","toast","finally","className","css","map","trendingMovie","to","id","src","poster","poster_path","IMAGE_URL","alt","title","getMovies","pathName","param","axios","searchParam","URLSearchParams","api_key","response","status","Promise","reject","message","data","total_results","getMoviesBySearchQuery","query","getMovieDetailsById","movieId","getMovieCastById","getMovieReviewsById"],"sourceRoot":""}