{"version":3,"file":"static/js/481.f4a8dd39.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieSearch/SearchForm/SearchForm.module.css?275e","components/MovieSearch/SearchForm/SearchForm.jsx","webpack://react-homework-template/./src/components/MovieItem/MovieItem.module.css?431a","components/MovieItem/MovieItem.jsx","webpack://react-homework-template/./src/components/MovieSearch/MovieSearch.module.css?a4c9","components/MovieSearch/MovieSearch.jsx","servises/MovieAPI.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"SearchForm\":\"SearchForm_SearchForm__TvMu7\",\"SearchForm__button\":\"SearchForm_SearchForm__button__NRcD8\",\"SearchForm__input\":\"SearchForm_SearchForm__input__nSi3N\"};","import PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport css from \"./SearchForm.module.css\"\n\nconst SearchForm = ({ value, onChange, onFormSubmit }) => {\n  const onSubmitHandle = e => {\n    e.preventDefault();\n    const query = e.target.elements.searchQuery.value;\n    \n    if (query.trim() === '') {\n      toast.warning('Enter search query!');\n    }\n    onFormSubmit(query);\n  };\n\n  return (\n    <form className={css.SearchForm} autoComplete=\"off\" onSubmit={onSubmitHandle}>\n      <button className={css.SearchForm__button} type=\"submit\">\n        Search\n      </button>\n\n      <input className={css.SearchForm__input}\n        id=\"searchQuery\"\n        type=\"text\"\n        name=\"searchQuery\"\n        value={value}\n        placeholder=\"Search movie\"\n        onChange={e => onChange(e.target.value)}\n        autoFocus\n      />\n    </form>\n  );\n};\n\nSearchForm.protoTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onFormSubmit: PropTypes.func.isRequired,\n}.isRequired;\nexport default SearchForm;","// extracted by mini-css-extract-plugin\nexport default {\"MovieItemTitleWrapper\":\"MovieItem_MovieItemTitleWrapper__eN-od\",\"MovieItemTitle\":\"MovieItem_MovieItemTitle__v2uGd\",\"MovieItemLink\":\"MovieItem_MovieItemLink__ssEyA\"};","import { useLocation, NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { IMAGE_URL } from 'servises/MovieAPI';\nimport placeholderIMG from '../../images/placeholder.jpeg';\n\nimport css from \"./MovieItem.module.css\"\n\nconst imageUrl = (poster) => {\n    return `${IMAGE_URL}${poster}`\n}\n\nconst MovieItem = ({ movie }) => {\n  const { id, title, poster_path } = movie;\n  const location = useLocation();\n\n  return (\n    <NavLink\n      className={css.MovieItemLink}\n      to={`/movies/${id}`}\n      key={id}\n      state={location}\n    >\n      <div className={css.MovieItemWrapper}>\n        {poster_path ? (\n          <img src={imageUrl(poster_path)} alt={title} />\n        ) : (\n          <img src={placeholderIMG} alt={title} />\n        )}\n      </div>\n      <div className={css.MovieItemTitleWrapper}>\n        <p className={css.MovieItemTitle}>{title || 'No name film'}</p>\n      </div>\n    </NavLink>\n  );\n};\n\nMovieItem.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    poster_path: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default MovieItem;","// extracted by mini-css-extract-plugin\nexport default {\"MovieSearchList\":\"MovieSearch_MovieSearchList__AfN3X\",\"MovieSearchItem\":\"MovieSearch_MovieSearchItem__NT6Vm\"};","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport SearchForm from '../MovieSearch/SearchForm/SearchForm';\nimport MovieItem from '../MovieItem/MovieItem';\n\nimport { getMoviesBySearchQuery } from '../../servises/MovieAPI';\n\nimport css from './MovieSearch.module.css'\n\nconst MoviesSearch = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n\n  const [searchQuery, setSearchQuery] = useState(query);\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (searchQuery.trim() !== '') {\n      setIsLoading(true);\n\n      getMoviesBySearchQuery(searchQuery)\n        .then(({ results }) => {\n          setMovies(results);\n        })\n        .catch(err => toast.error(err))\n        .finally(setIsLoading(false));\n    }\n  }, [searchQuery]);\n\n  const onChangeQuery = query => {\n    setSearchParams({ query });\n  };\n\n  const onFormSubmit = query => {\n    setSearchQuery(query);\n  };\n\n  return (\n    <div>\n      <SearchForm\n        value={query}\n        onChange={onChangeQuery}\n        onFormSubmit={onFormSubmit}\n      />\n      {isLoading && <p>Loading...</p>}\n      {!!movies?.length && !isLoading && (\n        <>\n          <ul className={css.MovieSearchList}>\n            {movies.map(movie => (\n              <li className={css.MovieSearchItem} key={movie.id} >\n                <MovieItem movie={movie} />\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default MoviesSearch;","import axios from 'axios';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst getMovies = async ({ pathName, param={} }) => {\n  axios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\n  const searchParam = new URLSearchParams({\n  api_key: '8981d06a4174dd7b5006af470bdeff3a',\n  ...param\n  });\n  return axios\n    .get(`${pathName}?${searchParam}`)\n    .then(response => {\n      if (response.status !== 200) {\n        return Promise.reject(`Error: ${response.message}`);\n      }\n\n      if (response.data.total_results === 0) {\n        return Promise.reject(\n          'Sorry, no matches found. Please try again.'\n        );\n      }\n\n      return response.data;\n    })\n    .catch(err => {\n      return Promise.reject(err);\n    });\n};\n\nexport const getTrendingMovies = () => {\n  return getMovies({ pathName: '/trending/movie/day' })\n};\n\n     \nexport const getMoviesBySearchQuery = (query) => {\n  return getMovies({\n    pathName: '/search/movie',\n    param: {query}\n  })\n};\n  \nexport const getMovieDetailsById = (movieId) => {\n  return getMovies({\n    pathName: `/movie/${movieId}`\n  })\n};\nexport const getMovieCastById = (movieId) => {\n  return getMovies({\n    pathName: `/movie/${movieId}/credits`\n  })\n};\n\nexport const getMovieReviewsById = (movieId) => {\n  return getMovies({\n    pathName: `/movie/${movieId}/reviews`\n  })\n};","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["SearchForm","value","onChange","onFormSubmit","className","css","autoComplete","onSubmit","e","preventDefault","query","target","elements","searchQuery","trim","toast","type","id","name","placeholder","autoFocus","protoTypes","PropTypes","isRequired","poster","movie","title","poster_path","location","useLocation","to","state","src","IMAGE_URL","alt","placeholderIMG","useSearchParams","searchParams","setSearchParams","get","useState","setSearchQuery","movies","setMovies","isLoading","setIsLoading","useEffect","getMoviesBySearchQuery","then","results","catch","err","finally","length","map","getMovies","pathName","param","axios","searchParam","URLSearchParams","api_key","response","status","Promise","reject","message","data","total_results","getTrendingMovies","getMovieDetailsById","movieId","getMovieCastById","getMovieReviewsById","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","propFullName","secret","Error","getShim","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}